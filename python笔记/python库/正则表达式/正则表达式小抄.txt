小抄---https://images.cnblogs.com/cnblogs_com/huxi/Windows-Live-Writer/Python_10A67/pyre_ebb9ce1c-e5e8-4219-a8ae-7ee620d5f9f1.png

      .--通配符

      \d--数字:[0-9] 

      \D--非数字等同于[^\d]

      \s--空白字符:[<空格>\t\r\n\f\v]

      \S--非空白字符:等同于[^\s]

      \w--单词字符:[A-Za-z0-9_]

      \W--非单词字符:[^\W]

      [a-z]--字符集

      [^a-z]--反转字符集

      |--选择符|,先匹配左边的，一旦匹配成功则跳过匹配右边的。如果没有被()中，则它的范围是整个正则表达式

      ()--被括起来的表达式将作为分组，分组表达式作为一个整体，可以后接数量。(abc){2}==abcabc  a(123|456)c==a456c

      (?p<name>\d)--别名为name的分组匹配\d

      (?:abc)--()的不分组版，用于使用|或后接数量，(?:abc){2}==abcabc

      (?iLmsux)--iLmsux的每个字母代表一个匹配模式，只能用在正则表达式的开头。(?i)abc==AbC  
                 i--忽略大小写(re.IGNORECASE)
                 L--使预定字符类 \w \W \b \B \s \S 取决于当前区域设定(re.LOCALE)
                 m--多行模式，改变'^'和'$'的行为(re.MULTILINE)
                 s--点任意匹配模式，使'.'也匹配换行符(re.DOTALL)
                 u--使预定字符类 \w \W \b \B \s \S \d \D 取决于unicode定义的字符属性(re.UNTCODE)
                 x--详细模式。这个模式下正则表达式可以是多行，忽略空白字符，并可以加入注释。(re.VERBOSE)
                 re.ASCII，使用ASCII码进行匹配（py2不支持）

      (?#...)--#后面的内容将作为注释被忽略

      (?=...)--之后的字符串内容需要匹配表达式才能成功匹配，a(?=\d)==后面是数字的a

      (?!...)--之后的字符串内容需要不匹配表达式才能成功匹配，a(?!\d)==后面不是数字的a

      (?<=...)--之前的字符串内容需要匹配表达式才能成功匹配，a(?<=\d)==前面是数字的a

      (?<!...)--之前的字符串内容需要不匹配表达式才能成功匹配，a(?<!\d)==前面不是数字的a

      (?(id/name)p1|p2)--如果编号为id或名字为name的组匹配到字符，则需要匹配p1，否则需要匹配p2,|p2可以省略，(\d)abc(?(1)\d|abc)==1abc或abcabc

      ？--可选项，可有可无(出现0次或1次)

      *--允许模式重复0次或多次

      +--允许模式重复1次或多次

      * + 都是贪婪的，后面加上一个?就可以实现非贪婪或最小匹配

      {m}--匹配前一个字符m次

      {m,n}--匹配前一个字符m-n次。

      '^a'--只匹配字符串开头位置的模式

      'a$'--只匹配字符串结尾位置的模式

      \A--仅匹配字符串开头。\Aabc==abc

      \Z--仅匹配字符串末尾。abc\Z==abc

      \b--匹配\w和\W之间。a\b!bc==a!bc  匹配一个字边界，即字与空格间的位置,在字符前面匹配开始，在字符后面匹配结尾。

      \B--[^\b]，非字边界匹配。




 
      
 